{".class": "MypyFile", "_fullname": "mypy.message_registry", "is_partial_stub_package": false, "is_stub": false, "names": {".class": "SymbolTable", "ALL_MUST_BE_SEQ_STR": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "final_value": "Type of __all__ must be {}, not {}", "flags": ["is_final", "is_ready"], "fullname": "mypy.message_registry.ALL_MUST_BE_SEQ_STR", "name": "ALL_MUST_BE_SEQ_STR", "type": {".class": "Instance", "args": [], "last_known_value": {".class": "LiteralType", "fallback": "builtins.str", "value": "Type of __all__ must be {}, not {}"}, "type_ref": "builtins.str"}}}, "ARGUMENT_TYPE_EXPECTED": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "final_value": "Function is missing a type annotation for one or more arguments", "flags": ["is_final", "is_ready"], "fullname": "mypy.message_registry.ARGUMENT_TYPE_EXPECTED", "name": "ARGUMENT_TYPE_EXPECTED", "type": {".class": "Instance", "args": [], "last_known_value": {".class": "LiteralType", "fallback": "builtins.str", "value": "Function is missing a type annotation for one or more arguments"}, "type_ref": "builtins.str"}}}, "BAD_CONSTRUCTOR_TYPE": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "final_value": "Unsupported decorated constructor type", "flags": ["is_final", "is_ready"], "fullname": "mypy.message_registry.BAD_CONSTRUCTOR_TYPE", "name": "BAD_CONSTRUCTOR_TYPE", "type": {".class": "Instance", "args": [], "last_known_value": {".class": "LiteralType", "fallback": "builtins.str", "value": "Unsupported decorated constructor type"}, "type_ref": "builtins.str"}}}, "BARE_GENERIC": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "final_value": "Missing type parameters for generic type {}", "flags": ["is_final", "is_ready"], "fullname": "mypy.message_registry.BARE_GENERIC", "name": "BARE_GENERIC", "type": {".class": "Instance", "args": [], "last_known_value": {".class": "LiteralType", "fallback": "builtins.str", "value": "Missing type parameters for generic type {}"}, "type_ref": "builtins.str"}}}, "CANNOT_ACCESS_FINAL_INSTANCE_ATTR": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "final_value": "Cannot access final instance attribute \"{}\" on class object", "flags": ["is_final", "is_ready"], "fullname": "mypy.message_registry.CANNOT_ACCESS_FINAL_INSTANCE_ATTR", "name": "CANNOT_ACCESS_FINAL_INSTANCE_ATTR", "type": {".class": "Instance", "args": [], "last_known_value": {".class": "LiteralType", "fallback": "builtins.str", "value": "Cannot access final instance attribute \"{}\" on class object"}, "type_ref": "builtins.str"}}}, "CANNOT_ACCESS_INIT": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "final_value": "Cannot access \"__init__\" directly", "flags": ["is_final", "is_ready"], "fullname": "mypy.message_registry.CANNOT_ACCESS_INIT", "name": "CANNOT_ACCESS_INIT", "type": {".class": "Instance", "args": [], "last_known_value": {".class": "LiteralType", "fallback": "builtins.str", "value": "Cannot access \"__init__\" directly"}, "type_ref": "builtins.str"}}}, "CANNOT_ASSIGN_TO_METHOD": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "final_value": "Cannot assign to a method", "flags": ["is_final", "is_ready"], "fullname": "mypy.message_registry.CANNOT_ASSIGN_TO_METHOD", "name": "CANNOT_ASSIGN_TO_METHOD", "type": {".class": "Instance", "args": [], "last_known_value": {".class": "LiteralType", "fallback": "builtins.str", "value": "Cannot assign to a method"}, "type_ref": "builtins.str"}}}, "CANNOT_ASSIGN_TO_TYPE": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "final_value": "Cannot assign to a type", "flags": ["is_final", "is_ready"], "fullname": "mypy.message_registry.CANNOT_ASSIGN_TO_TYPE", "name": "CANNOT_ASSIGN_TO_TYPE", "type": {".class": "Instance", "args": [], "last_known_value": {".class": "LiteralType", "fallback": "builtins.str", "value": "Cannot assign to a type"}, "type_ref": "builtins.str"}}}, "CANNOT_INFER_LAMBDA_TYPE": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "final_value": "Cannot infer type of lambda", "flags": ["is_final", "is_ready"], "fullname": "mypy.message_registry.CANNOT_INFER_LAMBDA_TYPE", "name": "CANNOT_INFER_LAMBDA_TYPE", "type": {".class": "Instance", "args": [], "last_known_value": {".class": "LiteralType", "fallback": "builtins.str", "value": "Cannot infer type of lambda"}, "type_ref": "builtins.str"}}}, "CANNOT_INHERIT_FROM_FINAL": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "final_value": "Cannot inherit from final class \"{}\"", "flags": ["is_final", "is_ready"], "fullname": "mypy.message_registry.CANNOT_INHERIT_FROM_FINAL", "name": "CANNOT_INHERIT_FROM_FINAL", "type": {".class": "Instance", "args": [], "last_known_value": {".class": "LiteralType", "fallback": "builtins.str", "value": "Cannot inherit from final class \"{}\""}, "type_ref": "builtins.str"}}}, "CANNOT_INSTANTIATE_PROTOCOL": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "final_value": "Cannot instantiate protocol class \"{}\"", "flags": ["is_final", "is_ready"], "fullname": "mypy.message_registry.CANNOT_INSTANTIATE_PROTOCOL", "name": "CANNOT_INSTANTIATE_PROTOCOL", "type": {".class": "Instance", "args": [], "last_known_value": {".class": "LiteralType", "fallback": "builtins.str", "value": "Cannot instantiate protocol class \"{}\""}, "type_ref": "builtins.str"}}}, "CANNOT_OVERRIDE_CLASS_VAR": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "final_value": "Cannot override class variable (previously declared on base class \"{}\") with instance variable", "flags": ["is_final", "is_ready"], "fullname": "mypy.message_registry.CANNOT_OVERRIDE_CLASS_VAR", "name": "CANNOT_OVERRIDE_CLASS_VAR", "type": {".class": "Instance", "args": [], "last_known_value": {".class": "LiteralType", "fallback": "builtins.str", "value": "Cannot override class variable (previously declared on base class \"{}\") with instance variable"}, "type_ref": "builtins.str"}}}, "CANNOT_OVERRIDE_INSTANCE_VAR": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "final_value": "Cannot override instance variable (previously declared on base class \"{}\") with class variable", "flags": ["is_final", "is_ready"], "fullname": "mypy.message_registry.CANNOT_OVERRIDE_INSTANCE_VAR", "name": "CANNOT_OVERRIDE_INSTANCE_VAR", "type": {".class": "Instance", "args": [], "last_known_value": {".class": "LiteralType", "fallback": "builtins.str", "value": "Cannot override instance variable (previously declared on base class \"{}\") with class variable"}, "type_ref": "builtins.str"}}}, "CANNOT_USE_TYPEVAR_AS_EXPRESSION": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "final_value": "Type variable \"{}.{}\" cannot be used as an expression", "flags": ["is_final", "is_ready"], "fullname": "mypy.message_registry.CANNOT_USE_TYPEVAR_AS_EXPRESSION", "name": "CANNOT_USE_TYPEVAR_AS_EXPRESSION", "type": {".class": "Instance", "args": [], "last_known_value": {".class": "LiteralType", "fallback": "builtins.str", "value": "Type variable \"{}.{}\" cannot be used as an expression"}, "type_ref": "builtins.str"}}}, "DEPENDENT_FINAL_IN_CLASS_BODY": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "final_value": "Final name declared in class body cannot depend on type variables", "flags": ["is_final", "is_ready"], "fullname": "mypy.message_registry.DEPENDENT_FINAL_IN_CLASS_BODY", "name": "DEPENDENT_FINAL_IN_CLASS_BODY", "type": {".class": "Instance", "args": [], "last_known_value": {".class": "LiteralType", "fallback": "builtins.str", "value": "Final name declared in class body cannot depend on type variables"}, "type_ref": "builtins.str"}}}, "DESCRIPTOR_GET_NOT_CALLABLE": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "final_value": "{}.__get__ is not callable", "flags": ["is_final", "is_ready"], "fullname": "mypy.message_registry.DESCRIPTOR_GET_NOT_CALLABLE", "name": "DESCRIPTOR_GET_NOT_CALLABLE", "type": {".class": "Instance", "args": [], "last_known_value": {".class": "LiteralType", "fallback": "builtins.str", "value": "{}.__get__ is not callable"}, "type_ref": "builtins.str"}}}, "DESCRIPTOR_SET_NOT_CALLABLE": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "final_value": "{}.__set__ is not callable", "flags": ["is_final", "is_ready"], "fullname": "mypy.message_registry.DESCRIPTOR_SET_NOT_CALLABLE", "name": "DESCRIPTOR_SET_NOT_CALLABLE", "type": {".class": "Instance", "args": [], "last_known_value": {".class": "LiteralType", "fallback": "builtins.str", "value": "{}.__set__ is not callable"}, "type_ref": "builtins.str"}}}, "DUPLICATE_TYPE_SIGNATURES": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "final_value": "Function has duplicate type signatures", "flags": ["is_final", "is_ready"], "fullname": "mypy.message_registry.DUPLICATE_TYPE_SIGNATURES", "name": "DUPLICATE_TYPE_SIGNATURES", "type": {".class": "Instance", "args": [], "last_known_value": {".class": "LiteralType", "fallback": "builtins.str", "value": "Function has duplicate type signatures"}, "type_ref": "builtins.str"}}}, "ERASED_SELF_TYPE_NOT_SUPERTYPE": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "final_value": "The erased type of self \"{}\" is not a supertype of its class \"{}\"", "flags": ["is_final", "is_ready"], "fullname": "mypy.message_registry.ERASED_SELF_TYPE_NOT_SUPERTYPE", "name": "ERASED_SELF_TYPE_NOT_SUPERTYPE", "type": {".class": "Instance", "args": [], "last_known_value": {".class": "LiteralType", "fallback": "builtins.str", "value": "The erased type of self \"{}\" is not a supertype of its class \"{}\""}, "type_ref": "builtins.str"}}}, "FORMAT_REQUIRES_MAPPING": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "final_value": "Format requires a mapping", "flags": ["is_final", "is_ready"], "fullname": "mypy.message_registry.FORMAT_REQUIRES_MAPPING", "name": "FORMAT_REQUIRES_MAPPING", "type": {".class": "Instance", "args": [], "last_known_value": {".class": "LiteralType", "fallback": "builtins.str", "value": "Format requires a mapping"}, "type_ref": "builtins.str"}}}, "FUNCTION_PARAMETER_CANNOT_BE_COVARIANT": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "final_value": "Cannot use a covariant type variable as a parameter", "flags": ["is_final", "is_ready"], "fullname": "mypy.message_registry.FUNCTION_PARAMETER_CANNOT_BE_COVARIANT", "name": "FUNCTION_PARAMETER_CANNOT_BE_COVARIANT", "type": {".class": "Instance", "args": [], "last_known_value": {".class": "LiteralType", "fallback": "builtins.str", "value": "Cannot use a covariant type variable as a parameter"}, "type_ref": "builtins.str"}}}, "FUNCTION_TYPE_EXPECTED": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "final_value": "Function is missing a type annotation", "flags": ["is_final", "is_ready"], "fullname": "mypy.message_registry.FUNCTION_TYPE_EXPECTED", "name": "FUNCTION_TYPE_EXPECTED", "type": {".class": "Instance", "args": [], "last_known_value": {".class": "LiteralType", "fallback": "builtins.str", "value": "Function is missing a type annotation"}, "type_ref": "builtins.str"}}}, "Final": {".class": "SymbolTableNode", "cross_ref": "typing_extensions.Final", "kind": "Gdef"}, "GENERIC_CLASS_VAR_ACCESS": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "final_value": "Access to generic class variables is ambiguous", "flags": ["is_final", "is_ready"], "fullname": "mypy.message_registry.GENERIC_CLASS_VAR_ACCESS", "name": "GENERIC_CLASS_VAR_ACCESS", "type": {".class": "Instance", "args": [], "last_known_value": {".class": "LiteralType", "fallback": "builtins.str", "value": "Access to generic class variables is ambiguous"}, "type_ref": "builtins.str"}}}, "GENERIC_INSTANCE_VAR_CLASS_ACCESS": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "final_value": "Access to generic instance variables via class is ambiguous", "flags": ["is_final", "is_ready"], "fullname": "mypy.message_registry.GENERIC_INSTANCE_VAR_CLASS_ACCESS", "name": "GENERIC_INSTANCE_VAR_CLASS_ACCESS", "type": {".class": "Instance", "args": [], "last_known_value": {".class": "LiteralType", "fallback": "builtins.str", "value": "Access to generic instance variables via class is ambiguous"}, "type_ref": "builtins.str"}}}, "IMPLICIT_GENERIC_ANY_BUILTIN": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "final_value": "Implicit generic \"Any\". Use \"{}\" and specify generic parameters", "flags": ["is_final", "is_ready"], "fullname": "mypy.message_registry.IMPLICIT_GENERIC_ANY_BUILTIN", "name": "IMPLICIT_GENERIC_ANY_BUILTIN", "type": {".class": "Instance", "args": [], "last_known_value": {".class": "LiteralType", "fallback": "builtins.str", "value": "Implicit generic \"Any\". Use \"{}\" and specify generic parameters"}, "type_ref": "builtins.str"}}}, "INCOMPATIBLE_IMPORT_OF": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "final_value": "Incompatible import of", "flags": ["is_final", "is_ready"], "fullname": "mypy.message_registry.INCOMPATIBLE_IMPORT_OF", "name": "INCOMPATIBLE_IMPORT_OF", "type": {".class": "Instance", "args": [], "last_known_value": {".class": "LiteralType", "fallback": "builtins.str", "value": "Incompatible import of"}, "type_ref": "builtins.str"}}}, "INCOMPATIBLE_REDEFINITION": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "final_value": "Incompatible redefinition", "flags": ["is_final", "is_ready"], "fullname": "mypy.message_registry.INCOMPATIBLE_REDEFINITION", "name": "INCOMPATIBLE_REDEFINITION", "type": {".class": "Instance", "args": [], "last_known_value": {".class": "LiteralType", "fallback": "builtins.str", "value": "Incompatible redefinition"}, "type_ref": "builtins.str"}}}, "INCOMPATIBLE_RETURN_VALUE_TYPE": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "final_value": "Incompatible return value type", "flags": ["is_final", "is_ready"], "fullname": "mypy.message_registry.INCOMPATIBLE_RETURN_VALUE_TYPE", "name": "INCOMPATIBLE_RETURN_VALUE_TYPE", "type": {".class": "Instance", "args": [], "last_known_value": {".class": "LiteralType", "fallback": "builtins.str", "value": "Incompatible return value type"}, "type_ref": "builtins.str"}}}, "INCOMPATIBLE_TYPES": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "final_value": "Incompatible types", "flags": ["is_final", "is_ready"], "fullname": "mypy.message_registry.INCOMPATIBLE_TYPES", "name": "INCOMPATIBLE_TYPES", "type": {".class": "Instance", "args": [], "last_known_value": {".class": "LiteralType", "fallback": "builtins.str", "value": "Incompatible types"}, "type_ref": "builtins.str"}}}, "INCOMPATIBLE_TYPES_IN_ASSIGNMENT": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "final_value": "Incompatible types in assignment", "flags": ["is_final", "is_ready"], "fullname": "mypy.message_registry.INCOMPATIBLE_TYPES_IN_ASSIGNMENT", "name": "INCOMPATIBLE_TYPES_IN_ASSIGNMENT", "type": {".class": "Instance", "args": [], "last_known_value": {".class": "LiteralType", "fallback": "builtins.str", "value": "Incompatible types in assignment"}, "type_ref": "builtins.str"}}}, "INCOMPATIBLE_TYPES_IN_ASYNC_FOR": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "final_value": "Incompatible types in \"async for\"", "flags": ["is_final", "is_ready"], "fullname": "mypy.message_registry.INCOMPATIBLE_TYPES_IN_ASYNC_FOR", "name": "INCOMPATIBLE_TYPES_IN_ASYNC_FOR", "type": {".class": "Instance", "args": [], "last_known_value": {".class": "LiteralType", "fallback": "builtins.str", "value": "Incompatible types in \"async for\""}, "type_ref": "builtins.str"}}}, "INCOMPATIBLE_TYPES_IN_ASYNC_WITH_AENTER": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "final_value": "Incompatible types in \"async with\" for \"__aenter__\"", "flags": ["is_final", "is_ready"], "fullname": "mypy.message_registry.INCOMPATIBLE_TYPES_IN_ASYNC_WITH_AENTER", "name": "INCOMPATIBLE_TYPES_IN_ASYNC_WITH_AENTER", "type": {".class": "Instance", "args": [], "last_known_value": {".class": "LiteralType", "fallback": "builtins.str", "value": "Incompatible types in \"async with\" for \"__aenter__\""}, "type_ref": "builtins.str"}}}, "INCOMPATIBLE_TYPES_IN_ASYNC_WITH_AEXIT": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "final_value": "Incompatible types in \"async with\" for \"__aexit__\"", "flags": ["is_final", "is_ready"], "fullname": "mypy.message_registry.INCOMPATIBLE_TYPES_IN_ASYNC_WITH_AEXIT", "name": "INCOMPATIBLE_TYPES_IN_ASYNC_WITH_AEXIT", "type": {".class": "Instance", "args": [], "last_known_value": {".class": "LiteralType", "fallback": "builtins.str", "value": "Incompatible types in \"async with\" for \"__aexit__\""}, "type_ref": "builtins.str"}}}, "INCOMPATIBLE_TYPES_IN_AWAIT": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "final_value": "Incompatible types in \"await\"", "flags": ["is_final", "is_ready"], "fullname": "mypy.message_registry.INCOMPATIBLE_TYPES_IN_AWAIT", "name": "INCOMPATIBLE_TYPES_IN_AWAIT", "type": {".class": "Instance", "args": [], "last_known_value": {".class": "LiteralType", "fallback": "builtins.str", "value": "Incompatible types in \"await\""}, "type_ref": "builtins.str"}}}, "INCOMPATIBLE_TYPES_IN_STR_INTERPOLATION": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "final_value": "Incompatible types in string interpolation", "flags": ["is_final", "is_ready"], "fullname": "mypy.message_registry.INCOMPATIBLE_TYPES_IN_STR_INTERPOLATION", "name": "INCOMPATIBLE_TYPES_IN_STR_INTERPOLATION", "type": {".class": "Instance", "args": [], "last_known_value": {".class": "LiteralType", "fallback": "builtins.str", "value": "Incompatible types in string interpolation"}, "type_ref": "builtins.str"}}}, "INCOMPATIBLE_TYPES_IN_YIELD": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "final_value": "Incompatible types in \"yield\"", "flags": ["is_final", "is_ready"], "fullname": "mypy.message_registry.INCOMPATIBLE_TYPES_IN_YIELD", "name": "INCOMPATIBLE_TYPES_IN_YIELD", "type": {".class": "Instance", "args": [], "last_known_value": {".class": "LiteralType", "fallback": "builtins.str", "value": "Incompatible types in \"yield\""}, "type_ref": "builtins.str"}}}, "INCOMPATIBLE_TYPES_IN_YIELD_FROM": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "final_value": "Incompatible types in \"yield from\"", "flags": ["is_final", "is_ready"], "fullname": "mypy.message_registry.INCOMPATIBLE_TYPES_IN_YIELD_FROM", "name": "INCOMPATIBLE_TYPES_IN_YIELD_FROM", "type": {".class": "Instance", "args": [], "last_known_value": {".class": "LiteralType", "fallback": "builtins.str", "value": "Incompatible types in \"yield from\""}, "type_ref": "builtins.str"}}}, "INCOMPATIBLE_TYPEVAR_VALUE": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "final_value": "Value of type variable \"{}\" of {} cannot be {}", "flags": ["is_final", "is_ready"], "fullname": "mypy.message_registry.INCOMPATIBLE_TYPEVAR_VALUE", "name": "INCOMPATIBLE_TYPEVAR_VALUE", "type": {".class": "Instance", "args": [], "last_known_value": {".class": "LiteralType", "fallback": "builtins.str", "value": "Value of type variable \"{}\" of {} cannot be {}"}, "type_ref": "builtins.str"}}}, "INCONSISTENT_ABSTRACT_OVERLOAD": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "final_value": "Overloaded method has both abstract and non-abstract variants", "flags": ["is_final", "is_ready"], "fullname": "mypy.message_registry.INCONSISTENT_ABSTRACT_OVERLOAD", "name": "INCONSISTENT_ABSTRACT_OVERLOAD", "type": {".class": "Instance", "args": [], "last_known_value": {".class": "LiteralType", "fallback": "builtins.str", "value": "Overloaded method has both abstract and non-abstract variants"}, "type_ref": "builtins.str"}}}, "INVALID_EXCEPTION": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "final_value": "Exception must be derived from BaseException", "flags": ["is_final", "is_ready"], "fullname": "mypy.message_registry.INVALID_EXCEPTION", "name": "INVALID_EXCEPTION", "type": {".class": "Instance", "args": [], "last_known_value": {".class": "LiteralType", "fallback": "builtins.str", "value": "Exception must be derived from BaseException"}, "type_ref": "builtins.str"}}}, "INVALID_EXCEPTION_TYPE": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "final_value": "Exception type must be derived from BaseException", "flags": ["is_final", "is_ready"], "fullname": "mypy.message_registry.INVALID_EXCEPTION_TYPE", "name": "INVALID_EXCEPTION_TYPE", "type": {".class": "Instance", "args": [], "last_known_value": {".class": "LiteralType", "fallback": "builtins.str", "value": "Exception type must be derived from BaseException"}, "type_ref": "builtins.str"}}}, "INVALID_GENERATOR_RETURN_ITEM_TYPE": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "final_value": "The return type of a generator function must be None in its third type parameter in Python 2", "flags": ["is_final", "is_ready"], "fullname": "mypy.message_registry.INVALID_GENERATOR_RETURN_ITEM_TYPE", "name": "INVALID_GENERATOR_RETURN_ITEM_TYPE", "type": {".class": "Instance", "args": [], "last_known_value": {".class": "LiteralType", "fallback": "builtins.str", "value": "The return type of a generator function must be None in its third type parameter in Python 2"}, "type_ref": "builtins.str"}}}, "INVALID_IMPLICIT_RETURN": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "final_value": "Implicit return in function which does not return", "flags": ["is_final", "is_ready"], "fullname": "mypy.message_registry.INVALID_IMPLICIT_RETURN", "name": "INVALID_IMPLICIT_RETURN", "type": {".class": "Instance", "args": [], "last_known_value": {".class": "LiteralType", "fallback": "builtins.str", "value": "Implicit return in function which does not return"}, "type_ref": "builtins.str"}}}, "INVALID_NEW_TYPE": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "final_value": "Incompatible return type for \"__new__\"", "flags": ["is_final", "is_ready"], "fullname": "mypy.message_registry.INVALID_NEW_TYPE", "name": "INVALID_NEW_TYPE", "type": {".class": "Instance", "args": [], "last_known_value": {".class": "LiteralType", "fallback": "builtins.str", "value": "Incompatible return type for \"__new__\""}, "type_ref": "builtins.str"}}}, "INVALID_RETURN_TYPE_FOR_ASYNC_GENERATOR": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "final_value": "The return type of an async generator function should be \"AsyncGenerator\" or one of its supertypes", "flags": ["is_final", "is_ready"], "fullname": "mypy.message_registry.INVALID_RETURN_TYPE_FOR_ASYNC_GENERATOR", "name": "INVALID_RETURN_TYPE_FOR_ASYNC_GENERATOR", "type": {".class": "Instance", "args": [], "last_known_value": {".class": "LiteralType", "fallback": "builtins.str", "value": "The return type of an async generator function should be \"AsyncGenerator\" or one of its supertypes"}, "type_ref": "builtins.str"}}}, "INVALID_RETURN_TYPE_FOR_GENERATOR": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "final_value": "The return type of a generator function should be \"Generator\" or one of its supertypes", "flags": ["is_final", "is_ready"], "fullname": "mypy.message_registry.INVALID_RETURN_TYPE_FOR_GENERATOR", "name": "INVALID_RETURN_TYPE_FOR_GENERATOR", "type": {".class": "Instance", "args": [], "last_known_value": {".class": "LiteralType", "fallback": "builtins.str", "value": "The return type of a generator function should be \"Generator\" or one of its supertypes"}, "type_ref": "builtins.str"}}}, "INVALID_SELF_TYPE_OR_EXTRA_ARG": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "final_value": "Invalid type for self, or extra argument type in function annotation", "flags": ["is_final", "is_ready"], "fullname": "mypy.message_registry.INVALID_SELF_TYPE_OR_EXTRA_ARG", "name": "INVALID_SELF_TYPE_OR_EXTRA_ARG", "type": {".class": "Instance", "args": [], "last_known_value": {".class": "LiteralType", "fallback": "builtins.str", "value": "Invalid type for self, or extra argument type in function annotation"}, "type_ref": "builtins.str"}}}, "INVALID_SLICE_INDEX": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "final_value": "Slice index must be an integer or None", "flags": ["is_final", "is_ready"], "fullname": "mypy.message_registry.INVALID_SLICE_INDEX", "name": "INVALID_SLICE_INDEX", "type": {".class": "Instance", "args": [], "last_known_value": {".class": "LiteralType", "fallback": "builtins.str", "value": "Slice index must be an integer or None"}, "type_ref": "builtins.str"}}}, "INVALID_TUPLE_INDEX_TYPE": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "final_value": "Invalid tuple index type", "flags": ["is_final", "is_ready"], "fullname": "mypy.message_registry.INVALID_TUPLE_INDEX_TYPE", "name": "INVALID_TUPLE_INDEX_TYPE", "type": {".class": "Instance", "args": [], "last_known_value": {".class": "LiteralType", "fallback": "builtins.str", "value": "Invalid tuple index type"}, "type_ref": "builtins.str"}}}, "INVALID_TYPEDDICT_ARGS": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "final_value": "Expected keyword arguments, {...}, or dict(...) in TypedDict constructor", "flags": ["is_final", "is_ready"], "fullname": "mypy.message_registry.INVALID_TYPEDDICT_ARGS", "name": "INVALID_TYPEDDICT_ARGS", "type": {".class": "Instance", "args": [], "last_known_value": {".class": "LiteralType", "fallback": "builtins.str", "value": "Expected keyword arguments, {...}, or dict(...) in TypedDict constructor"}, "type_ref": "builtins.str"}}}, "INVALID_TYPE_RAW_ENUM_VALUE": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "final_value": "Invalid type: try using Literal[{}.{}] instead?", "flags": ["is_final", "is_ready"], "fullname": "mypy.message_registry.INVALID_TYPE_RAW_ENUM_VALUE", "name": "INVALID_TYPE_RAW_ENUM_VALUE", "type": {".class": "Instance", "args": [], "last_known_value": {".class": "LiteralType", "fallback": "builtins.str", "value": "Invalid type: try using Literal[{}.{}] instead?"}, "type_ref": "builtins.str"}}}, "KEYWORD_ARGUMENT_REQUIRES_STR_KEY_TYPE": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "final_value": "Keyword argument only valid with \"str\" key type in call to \"dict\"", "flags": ["is_final", "is_ready"], "fullname": "mypy.message_registry.KEYWORD_ARGUMENT_REQUIRES_STR_KEY_TYPE", "name": "KEYWORD_ARGUMENT_REQUIRES_STR_KEY_TYPE", "type": {".class": "Instance", "args": [], "last_known_value": {".class": "LiteralType", "fallback": "builtins.str", "value": "Keyword argument only valid with \"str\" key type in call to \"dict\""}, "type_ref": "builtins.str"}}}, "MALFORMED_ASSERT": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "final_value": "Assertion is always true, perhaps remove parentheses?", "flags": ["is_final", "is_ready"], "fullname": "mypy.message_registry.MALFORMED_ASSERT", "name": "MALFORMED_ASSERT", "type": {".class": "Instance", "args": [], "last_known_value": {".class": "LiteralType", "fallback": "builtins.str", "value": "Assertion is always true, perhaps remove parentheses?"}, "type_ref": "builtins.str"}}}, "MISSING_OR_INVALID_SELF_TYPE": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "final_value": "Self argument missing for a non-static method (or an invalid type for self)", "flags": ["is_final", "is_ready"], "fullname": "mypy.message_registry.MISSING_OR_INVALID_SELF_TYPE", "name": "MISSING_OR_INVALID_SELF_TYPE", "type": {".class": "Instance", "args": [], "last_known_value": {".class": "LiteralType", "fallback": "builtins.str", "value": "Self argument missing for a non-static method (or an invalid type for self)"}, "type_ref": "builtins.str"}}}, "MISSING_RETURN_STATEMENT": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "final_value": "Missing return statement", "flags": ["is_final", "is_ready"], "fullname": "mypy.message_registry.MISSING_RETURN_STATEMENT", "name": "MISSING_RETURN_STATEMENT", "type": {".class": "Instance", "args": [], "last_known_value": {".class": "LiteralType", "fallback": "builtins.str", "value": "Missing return statement"}, "type_ref": "builtins.str"}}}, "MODULE_LEVEL_GETATTRIBUTE": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "final_value": "__getattribute__ is not valid at the module level", "flags": ["is_final", "is_ready"], "fullname": "mypy.message_registry.MODULE_LEVEL_GETATTRIBUTE", "name": "MODULE_LEVEL_GETATTRIBUTE", "type": {".class": "Instance", "args": [], "last_known_value": {".class": "LiteralType", "fallback": "builtins.str", "value": "__getattribute__ is not valid at the module level"}, "type_ref": "builtins.str"}}}, "MULTIPLE_OVERLOADS_REQUIRED": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "final_value": "Single overload definition, multiple required", "flags": ["is_final", "is_ready"], "fullname": "mypy.message_registry.MULTIPLE_OVERLOADS_REQUIRED", "name": "MULTIPLE_OVERLOADS_REQUIRED", "type": {".class": "Instance", "args": [], "last_known_value": {".class": "LiteralType", "fallback": "builtins.str", "value": "Single overload definition, multiple required"}, "type_ref": "builtins.str"}}}, "MUST_HAVE_NONE_RETURN_TYPE": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "final_value": "The return type of \"{}\" must be None", "flags": ["is_final", "is_ready"], "fullname": "mypy.message_registry.MUST_HAVE_NONE_RETURN_TYPE", "name": "MUST_HAVE_NONE_RETURN_TYPE", "type": {".class": "Instance", "args": [], "last_known_value": {".class": "LiteralType", "fallback": "builtins.str", "value": "The return type of \"{}\" must be None"}, "type_ref": "builtins.str"}}}, "NON_INSTANCE_NEW_TYPE": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "final_value": "\"__new__\" must return a class instance (got {})", "flags": ["is_final", "is_ready"], "fullname": "mypy.message_registry.NON_INSTANCE_NEW_TYPE", "name": "NON_INSTANCE_NEW_TYPE", "type": {".class": "Instance", "args": [], "last_known_value": {".class": "LiteralType", "fallback": "builtins.str", "value": "\"__new__\" must return a class instance (got {})"}, "type_ref": "builtins.str"}}}, "NO_RETURN_EXPECTED": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "final_value": "Return statement in function which does not return", "flags": ["is_final", "is_ready"], "fullname": "mypy.message_registry.NO_RETURN_EXPECTED", "name": "NO_RETURN_EXPECTED", "type": {".class": "Instance", "args": [], "last_known_value": {".class": "LiteralType", "fallback": "builtins.str", "value": "Return statement in function which does not return"}, "type_ref": "builtins.str"}}}, "NO_RETURN_VALUE_EXPECTED": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "final_value": "No return value expected", "flags": ["is_final", "is_ready"], "fullname": "mypy.message_registry.NO_RETURN_VALUE_EXPECTED", "name": "NO_RETURN_VALUE_EXPECTED", "type": {".class": "Instance", "args": [], "last_known_value": {".class": "LiteralType", "fallback": "builtins.str", "value": "No return value expected"}, "type_ref": "builtins.str"}}}, "ONLY_CLASS_APPLICATION": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "final_value": "Type application is only supported for generic classes", "flags": ["is_final", "is_ready"], "fullname": "mypy.message_registry.ONLY_CLASS_APPLICATION", "name": "ONLY_CLASS_APPLICATION", "type": {".class": "Instance", "args": [], "last_known_value": {".class": "LiteralType", "fallback": "builtins.str", "value": "Type application is only supported for generic classes"}, "type_ref": "builtins.str"}}}, "READ_ONLY_PROPERTY_OVERRIDES_READ_WRITE": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "final_value": "Read-only property cannot override read-write property", "flags": ["is_final", "is_ready"], "fullname": "mypy.message_registry.READ_ONLY_PROPERTY_OVERRIDES_READ_WRITE", "name": "READ_ONLY_PROPERTY_OVERRIDES_READ_WRITE", "type": {".class": "Instance", "args": [], "last_known_value": {".class": "LiteralType", "fallback": "builtins.str", "value": "Read-only property cannot override read-write property"}, "type_ref": "builtins.str"}}}, "RETURN_IN_ASYNC_GENERATOR": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "final_value": "'return' with value in async generator is not allowed", "flags": ["is_final", "is_ready"], "fullname": "mypy.message_registry.RETURN_IN_ASYNC_GENERATOR", "name": "RETURN_IN_ASYNC_GENERATOR", "type": {".class": "Instance", "args": [], "last_known_value": {".class": "LiteralType", "fallback": "builtins.str", "value": "'return' with value in async generator is not allowed"}, "type_ref": "builtins.str"}}}, "RETURN_TYPE_CANNOT_BE_CONTRAVARIANT": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "final_value": "Cannot use a contravariant type variable as return type", "flags": ["is_final", "is_ready"], "fullname": "mypy.message_registry.RETURN_TYPE_CANNOT_BE_CONTRAVARIANT", "name": "RETURN_TYPE_CANNOT_BE_CONTRAVARIANT", "type": {".class": "Instance", "args": [], "last_known_value": {".class": "LiteralType", "fallback": "builtins.str", "value": "Cannot use a contravariant type variable as return type"}, "type_ref": "builtins.str"}}}, "RETURN_TYPE_EXPECTED": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "final_value": "Function is missing a return type annotation", "flags": ["is_final", "is_ready"], "fullname": "mypy.message_registry.RETURN_TYPE_EXPECTED", "name": "RETURN_TYPE_EXPECTED", "type": {".class": "Instance", "args": [], "last_known_value": {".class": "LiteralType", "fallback": "builtins.str", "value": "Function is missing a return type annotation"}, "type_ref": "builtins.str"}}}, "RETURN_VALUE_EXPECTED": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "final_value": "Return value expected", "flags": ["is_final", "is_ready"], "fullname": "mypy.message_registry.RETURN_VALUE_EXPECTED", "name": "RETURN_VALUE_EXPECTED", "type": {".class": "Instance", "args": [], "last_known_value": {".class": "LiteralType", "fallback": "builtins.str", "value": "Return value expected"}, "type_ref": "builtins.str"}}}, "RUNTIME_PROTOCOL_EXPECTED": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "final_value": "Only @runtime_checkable protocols can be used with instance and class checks", "flags": ["is_final", "is_ready"], "fullname": "mypy.message_registry.RUNTIME_PROTOCOL_EXPECTED", "name": "RUNTIME_PROTOCOL_EXPECTED", "type": {".class": "Instance", "args": [], "last_known_value": {".class": "LiteralType", "fallback": "builtins.str", "value": "Only @runtime_checkable protocols can be used with instance and class checks"}, "type_ref": "builtins.str"}}}, "SUPER_ARG_2_NOT_INSTANCE_OF_ARG_1": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "final_value": "Argument 2 for \"super\" not an instance of argument 1", "flags": ["is_final", "is_ready"], "fullname": "mypy.message_registry.SUPER_ARG_2_NOT_INSTANCE_OF_ARG_1", "name": "SUPER_ARG_2_NOT_INSTANCE_OF_ARG_1", "type": {".class": "Instance", "args": [], "last_known_value": {".class": "LiteralType", "fallback": "builtins.str", "value": "Argument 2 for \"super\" not an instance of argument 1"}, "type_ref": "builtins.str"}}}, "SUPER_ENCLOSING_POSITIONAL_ARGS_REQUIRED": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "final_value": "super() requires one or more positional arguments in enclosing function", "flags": ["is_final", "is_ready"], "fullname": "mypy.message_registry.SUPER_ENCLOSING_POSITIONAL_ARGS_REQUIRED", "name": "SUPER_ENCLOSING_POSITIONAL_ARGS_REQUIRED", "type": {".class": "Instance", "args": [], "last_known_value": {".class": "LiteralType", "fallback": "builtins.str", "value": "super() requires one or more positional arguments in enclosing function"}, "type_ref": "builtins.str"}}}, "SUPER_OUTSIDE_OF_METHOD_NOT_SUPPORTED": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "final_value": "super() outside of a method is not supported", "flags": ["is_final", "is_ready"], "fullname": "mypy.message_registry.SUPER_OUTSIDE_OF_METHOD_NOT_SUPPORTED", "name": "SUPER_OUTSIDE_OF_METHOD_NOT_SUPPORTED", "type": {".class": "Instance", "args": [], "last_known_value": {".class": "LiteralType", "fallback": "builtins.str", "value": "super() outside of a method is not supported"}, "type_ref": "builtins.str"}}}, "SUPER_POSITIONAL_ARGS_REQUIRED": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "final_value": "\"super\" only accepts positional arguments", "flags": ["is_final", "is_ready"], "fullname": "mypy.message_registry.SUPER_POSITIONAL_ARGS_REQUIRED", "name": "SUPER_POSITIONAL_ARGS_REQUIRED", "type": {".class": "Instance", "args": [], "last_known_value": {".class": "LiteralType", "fallback": "builtins.str", "value": "\"super\" only accepts positional arguments"}, "type_ref": "builtins.str"}}}, "SUPER_VARARGS_NOT_SUPPORTED": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "final_value": "Varargs not supported with \"super\"", "flags": ["is_final", "is_ready"], "fullname": "mypy.message_registry.SUPER_VARARGS_NOT_SUPPORTED", "name": "SUPER_VARARGS_NOT_SUPPORTED", "type": {".class": "Instance", "args": [], "last_known_value": {".class": "LiteralType", "fallback": "builtins.str", "value": "Varargs not supported with \"super\""}, "type_ref": "builtins.str"}}}, "SUPER_WITH_SINGLE_ARG_NOT_SUPPORTED": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "final_value": "\"super\" with a single argument not supported", "flags": ["is_final", "is_ready"], "fullname": "mypy.message_registry.SUPER_WITH_SINGLE_ARG_NOT_SUPPORTED", "name": "SUPER_WITH_SINGLE_ARG_NOT_SUPPORTED", "type": {".class": "Instance", "args": [], "last_known_value": {".class": "LiteralType", "fallback": "builtins.str", "value": "\"super\" with a single argument not supported"}, "type_ref": "builtins.str"}}}, "TOO_FEW_ARGS_FOR_SUPER": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "final_value": "Too few arguments for \"super\"", "flags": ["is_final", "is_ready"], "fullname": "mypy.message_registry.TOO_FEW_ARGS_FOR_SUPER", "name": "TOO_FEW_ARGS_FOR_SUPER", "type": {".class": "Instance", "args": [], "last_known_value": {".class": "LiteralType", "fallback": "builtins.str", "value": "Too few arguments for \"super\""}, "type_ref": "builtins.str"}}}, "TOO_MANY_ARGS_FOR_SUPER": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "final_value": "Too many arguments for \"super\"", "flags": ["is_final", "is_ready"], "fullname": "mypy.message_registry.TOO_MANY_ARGS_FOR_SUPER", "name": "TOO_MANY_ARGS_FOR_SUPER", "type": {".class": "Instance", "args": [], "last_known_value": {".class": "LiteralType", "fallback": "builtins.str", "value": "Too many arguments for \"super\""}, "type_ref": "builtins.str"}}}, "TUPLE_INDEX_OUT_OF_RANGE": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "final_value": "Tuple index out of range", "flags": ["is_final", "is_ready"], "fullname": "mypy.message_registry.TUPLE_INDEX_OUT_OF_RANGE", "name": "TUPLE_INDEX_OUT_OF_RANGE", "type": {".class": "Instance", "args": [], "last_known_value": {".class": "LiteralType", "fallback": "builtins.str", "value": "Tuple index out of range"}, "type_ref": "builtins.str"}}}, "TYPEDDICT_KEY_MUST_BE_STRING_LITERAL": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "final_value": "Expected TypedDict key to be string literal", "flags": ["is_final", "is_ready"], "fullname": "mypy.message_registry.TYPEDDICT_KEY_MUST_BE_STRING_LITERAL", "name": "TYPEDDICT_KEY_MUST_BE_STRING_LITERAL", "type": {".class": "Instance", "args": [], "last_known_value": {".class": "LiteralType", "fallback": "builtins.str", "value": "Expected TypedDict key to be string literal"}, "type_ref": "builtins.str"}}}, "UNSUPPORTED_ARG_1_FOR_SUPER": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "final_value": "Unsupported argument 1 for \"super\"", "flags": ["is_final", "is_ready"], "fullname": "mypy.message_registry.UNSUPPORTED_ARG_1_FOR_SUPER", "name": "UNSUPPORTED_ARG_1_FOR_SUPER", "type": {".class": "Instance", "args": [], "last_known_value": {".class": "LiteralType", "fallback": "builtins.str", "value": "Unsupported argument 1 for \"super\""}, "type_ref": "builtins.str"}}}, "UNSUPPORTED_ARG_2_FOR_SUPER": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "final_value": "Unsupported argument 2 for \"super\"", "flags": ["is_final", "is_ready"], "fullname": "mypy.message_registry.UNSUPPORTED_ARG_2_FOR_SUPER", "name": "UNSUPPORTED_ARG_2_FOR_SUPER", "type": {".class": "Instance", "args": [], "last_known_value": {".class": "LiteralType", "fallback": "builtins.str", "value": "Unsupported argument 2 for \"super\""}, "type_ref": "builtins.str"}}}, "YIELD_VALUE_EXPECTED": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "final_value": "Yield value expected", "flags": ["is_final", "is_ready"], "fullname": "mypy.message_registry.YIELD_VALUE_EXPECTED", "name": "YIELD_VALUE_EXPECTED", "type": {".class": "Instance", "args": [], "last_known_value": {".class": "LiteralType", "fallback": "builtins.str", "value": "Yield value expected"}, "type_ref": "builtins.str"}}}, "__doc__": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "mypy.message_registry.__doc__", "name": "__doc__", "type": "builtins.str"}}, "__file__": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "mypy.message_registry.__file__", "name": "__file__", "type": "builtins.str"}}, "__name__": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "mypy.message_registry.__name__", "name": "__name__", "type": "builtins.str"}}, "__package__": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "mypy.message_registry.__package__", "name": "__package__", "type": "builtins.str"}}}, "path": "C:\\Users\\samuelexferri\\Envs\\venv_pharmacies\\lib\\site-packages\\mypy\\message_registry.py"}