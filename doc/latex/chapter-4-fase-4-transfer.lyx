#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass scrbook
\begin_preamble
% in case somebody want to have the label "Equation"
%\renewcommand{\eqref}[1]{Equation~(\negthinspace\autoref{#1})}

% that links to image floats jumps to the beginning
% of the float and not to its caption
\usepackage[figure]{hypcap}

% the pages of the TOC is numbered roman
% and a pdf-bookmark for the TOC is added
\let\myTOC\tableofcontents
\renewcommand\tableofcontents{%
  \frontmatter
  \pdfbookmark[1]{\contentsname}{}
  \myTOC
  \mainmatter }

% makes caption labels bold
% for more info about these settings, see
% https://ctan.org/tex-archive/macros/latex/contrib/koma-script/doc/scrguien.pdf
\setkomafont{captionlabel}{\bfseries}
\setcapindent{1em}

% enables calculations
\usepackage{calc}

% fancy page header/footer settings
% for more information see section 9 of
% ftp://www.ctan.org/pub/tex-archive/macros/latex2e/contrib/fancyhdr/fancyhdr.pdf
\renewcommand{\chaptermark}[1]{\markboth{#1}{#1}}
\renewcommand{\sectionmark}[1]{\markright{\thesection\ #1}}

% increases the bottom float placement fraction
\renewcommand{\bottomfraction}{0.5}

% avoids that floats are placed above its sections
\let\mySection\section\renewcommand{\section}{\suppressfloats[t]\mySection}

% increases link area for cross-references and autoname them
% if you change the document language to e.g. French
% you must change "extrasenglish" to "extrasfrench"
% if you uncomment the following lines, you cannot use the reference version Ref+Text in LyX
%\AtBeginDocument{%
% \renewcommand{\ref}[1]{\autoref{#1}}
%}
%\def\refnamechanges{%
% \renewcommand*{\equationautorefname}[1]{}
% \renewcommand{\sectionautorefname}{sec.\negthinspace}
% \renewcommand{\subsectionautorefname}{sec.\negthinspace}
% \renewcommand{\subsubsectionautorefname}{sec.\negthinspace}
% \renewcommand{\figureautorefname}{Fig.\negthinspace}
% \renewcommand{\tableautorefname}{Tab.\negthinspace}
%}
%\@ifpackageloaded{babel}{\addto\extrasenglish{\refnamechanges}}{\refnamechanges}
\end_preamble
\options intoc,bibliography=totoc,index=totoc,BCOR10mm,captions=tableheading,titlepage
\use_default_options true
\master project.lyx
\begin_modules
customHeadersFooters
\end_modules
\maintain_unincluded_children false
\language italian
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "lmodern" "default"
\font_sans "lmss" "default"
\font_typewriter "lmtt" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures false
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command bibtex
\index_command default
\float_placement H
\paperfontsize 12
\spacing single
\use_hyperref true
\pdf_title "Your title"
\pdf_author "Your name"
\pdf_bookmarks true
\pdf_bookmarksnumbered true
\pdf_bookmarksopen true
\pdf_bookmarksopenlevel 1
\pdf_breaklinks false
\pdf_pdfborder true
\pdf_colorlinks false
\pdf_backref false
\pdf_pdfusetitle false
\pdf_quoted_options "pdfpagelayout=OneColumn, pdfnewwindow=true, pdfstartview=XYZ, plainpages=false"
\papersize a4paper
\use_geometry false
\use_package amsmath 2
\use_package amssymb 2
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 0
\use_minted 0
\branch Standalone
\selected 1
\filename_suffix 0
\color #ff0000
\end_branch
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 2
\paragraph_separation skip
\defskip medskip
\is_math_indent 1
\math_indentation default
\math_numbering_side default
\quotes_style french
\dynamic_quotes 0
\papercolumns 1
\papersides 2
\paperpagestyle fancy
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Left Header
\begin_inset Argument 1
status open

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
chaptername
\end_layout

\end_inset


\begin_inset space ~
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
thechapter
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
rightmark
\end_layout

\end_inset


\end_layout

\begin_layout Right Header
\begin_inset Argument 1
status open

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
leftmark
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Left Footer
\begin_inset Argument 1
status open

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
thepage
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Center Footer

\end_layout

\begin_layout Right Footer
\begin_inset Argument 1
status open

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
thepage
\end_layout

\end_inset


\end_layout

\begin_layout Part
Fase 4
\end_layout

\begin_layout Chapter
Transfer
\end_layout

\begin_layout Standard
In questa fase abbiamo implementato l'app 
\emph on
transfer 
\emph default
che contiene un algoritmo greedy per il calcolo del trasferimento dei farmaci.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename screenshot/Transfer.png
	lyxscale 75
	scale 40

\end_inset


\end_layout

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Caption Standard

\begin_layout Plain Layout
Transfer
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Descrizione
\end_layout

\begin_layout Standard
L'algoritmo si prefigge di trovare un percorso che permetta di ottenere
 al farmacista la quantità richiesta di farmaci percorrendo un cammino visto
 come serie di farmacie presenti nel territorio.
 A ogni iterazione la farmacia verrà scelta tra le N disponibili, dalle
 quali verranno rimosse quelle già selezionate in precedenza.
 Ogni farmacia ha una posizione indicata con le coordinate (x,y) e ha a
 disposizione una nota quantità del farmaco richiesto.
 Viene tenuto conto anche della posizione inziale in cui viene formulata
 la richiesta di trasferimento dei farmaci.
\end_layout

\begin_layout Standard
L'algoritmo avrà quindi i seguenti ingressi e uscite:
\end_layout

\begin_layout Standard
INPUT: Quantità farmaci richiesta con relativa categoria dei farmaci e posizione
 iniziale del cliente (data dal GPS, componente mock quindi random)
\end_layout

\begin_layout Standard

\emph on
[QuantitàFarmaco, CategoriaFarmaco]
\end_layout

\begin_layout Standard
OUTPUT: Percorso da seguire come serie di farmacie 
\end_layout

\begin_layout Standard

\emph on
[Farmacia i-esima, PosizioneFarmacia, QuantiàFarmacoFarmacia]
\end_layout

\begin_layout Standard
Inoltre affinché l'algoritmo funzioni sono necessarie le seguenti precondizioni:
\end_layout

\begin_layout Enumerate
Non deve esistere una farmacia che da sola possa soddisfare la richiesta
 della quantità di farmaci (altrimenti basterebbe solo una scelta e non
 vi sarebbe un algoritmo).
\end_layout

\begin_layout Enumerate
La richiesta della quantità di farmaci deve poter essere soddisfatta dalle
 farmacie (altrimenti è irrealizzabile l’algoritmo).
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
∀Farmacia:\sum_{Farmaci}\leq QuantitàRichiesta
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\sum_{Farmacie}\sum_{Farmaci}\geq QuantitàRichiesta
\end{equation}

\end_inset


\end_layout

\begin_layout Section
Criterio scelta
\end_layout

\begin_layout Standard
Le farmacie restanti tra cui poter scegliere (quindi non ancora selezionate
 negli step precedenti) avranno un determinato valore della variabile weight,
 espressa come:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
weight=\frac{N°FarmaciDisponibili}{\sqrt{(x-x_{i})^{2}+(y-y_{i})^{2}}}
\]

\end_inset


\end_layout

\begin_layout Standard
dove 
\emph on
N°FarmaciDisponibili
\emph default
 è la quantità in dotazione nella i-esima farmacia del farmaco in questione
 e 
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\xout off
\uuline off
\uwave off
\noun off
\color none
il denominatore è il calcolo della distanza tra due punti (
\family default
\series default
\shape default
\size default
\emph default
\bar default
\strikeout default
\xout default
\uuline default
\uwave default
\noun default
\color inherit
teorema di Pitagora).
\end_layout

\begin_layout Standard
Questo rapporto che ha unità di misura 
\begin_inset Formula $\frac{Farmaci}{Km}$
\end_inset

 indica qual è la farmacia 
\begin_inset Formula $(x_{i},y_{i})$
\end_inset

 che, considerando la posizione attuale in cui il richiedente si trova (x,y),
 garantisce il maggior numero di farmaci da ricevere in funzione della distanza
 da percorrere.
\end_layout

\begin_layout Standard
Ad esempio, se il richiedente si trovasse in posizione (0,0) e volesse 80
 farmaci con due farmacie tra cui scegliere chiamate 
\emph on
farmacia1
\emph default
 in posizione (x1=75, y1=50) con disponibilità di farmaci pari a 50 e 
\emph on
farmacia2
\emph default
 in posizione (x2=40, y2=60) con disponibilità di farmaci pari a 45 avrò
 che 
\emph on
farmacia1
\emph default
 avrà un peso 
\emph on
w1
\emph default
=0.554 farmaci/km e che 
\emph on
farmacia2
\emph default
 avrà un peso 
\emph on
w2
\emph default
=0.624 farmaci/km.
\end_layout

\begin_layout Standard
La scelta golosa locale consiste nel compiere l'i-esima scelta della farmacia
 a cui andare in modo da massimizzare il valore del weight (scegliere sempre
 il candidato più promettente); scegliere il weight maggiore equivale ad
 andare alla farmacia che mi garantisce il maggior numero di farmaci disponibili
 in funzione della distanza che bisogna percorrere per arrivarci.
 Nel caso del nostro esempio sceglieremo quindi 
\emph on
w2
\emph default
 essendo 
\emph on
w2>w1,
\emph default
 ciò mi garantisce un maggior numero di farmaci al km.
\end_layout

\begin_layout Section
Pseudocodice
\end_layout

\begin_layout Standard
\begin_inset Float algorithm
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Pseudocodice di transfer
\end_layout

\end_inset

TransferMedicinali (quantità richiesta Q, categoria richiesta C) -> lista
 farmacie R
\end_layout

\begin_layout Plain Layout
\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset

R <- 0
\end_layout

\begin_layout Plain Layout
\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset

if (!vincolo2(Q,C)) return R
\end_layout

\begin_layout Plain Layout
\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset

F <- lista di tutte le farmacie
\end_layout

\begin_layout Plain Layout
\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset

while (Q > 0) do
\end_layout

\begin_layout Plain Layout
\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset

W <- calcolaPesi(F,C)
\end_layout

\begin_layout Plain Layout
\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset

X <- seleziona(F,W)
\end_layout

\begin_layout Plain Layout
\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset

F <- F - {x}
\end_layout

\begin_layout Plain Layout
\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset

R <- R ∪ {x}
\end_layout

\begin_layout Plain Layout
\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset

Q <- Q - X.quantityProduct
\end_layout

\begin_layout Plain Layout
\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset

return R
\end_layout

\end_inset


\end_layout

\begin_layout Standard
I vincoli 1 e 2 sono le precondizioni definite in precedenza: in particolare
 il vincolo 1 è labile e l'algoritmo funziona ugualmente restituendo una
 sola farmacia da dove prendere tutta la quantità di farmaci necessaria.
 R rappresenta la lista di farmacie soluzioni in sequenza dell'algoritmo
 e viene inizializzata come vuota.
 Entrando più nello specifico delle righe di codice abbiamo che:
\end_layout

\begin_layout Standard
\begin_inset Float algorithm
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Transfer :: vincolo2
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
vincolo2 (quantità richiesta Q, categoria richiesta C) -> Boolean
\end_layout

\begin_layout Plain Layout
\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset

count <- 0
\end_layout

\begin_layout Plain Layout
\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset

foreach product in Product
\end_layout

\begin_layout Plain Layout
\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset

if (product.category==C) 
\end_layout

\begin_layout Plain Layout
\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset

count += product.quantity
\end_layout

\begin_layout Plain Layout
\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset

if (count>Q) return false
\end_layout

\begin_layout Plain Layout
\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset

else return true
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float algorithm
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Transfer :: calcolaPesi
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
calcolaPesi (lista farmacie F, categoria richiesta C) -> lista pesi W
\end_layout

\begin_layout Plain Layout
\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset

W <- 0
\end_layout

\begin_layout Plain Layout
\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset

x, y: posizione del richiedente
\end_layout

\begin_layout Plain Layout
\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset

foreach pharm in F:
\end_layout

\begin_layout Plain Layout
\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset

foreach product in Product:
\end_layout

\begin_layout Plain Layout
\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset

if (product.category==C && product.pharmacy == pharm)
\end_layout

\begin_layout Plain Layout
\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset

quantitàProdottiC <- product.quantity
\end_layout

\begin_layout Plain Layout
\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset

weight <- (quantitàProdottiC)/sqrt( (pharm.x^2 - x1^2) + (pharm.y^2-y1^2)
 )
\end_layout

\begin_layout Plain Layout
\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset

W <- W ∪ {weight}
\end_layout

\begin_layout Plain Layout
\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset

return W
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float algorithm
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Transfer :: seleziona
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
seleziona (lista farmacie F, lista pesi W) -> farmacia X
\end_layout

\begin_layout Plain Layout
\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset

max <- W[0]
\end_layout

\begin_layout Plain Layout
\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset

indice <- 0
\end_layout

\begin_layout Plain Layout
\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset

for i ∈ idPharm:
\end_layout

\begin_layout Plain Layout
\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset

if (max < weight )
\end_layout

\begin_layout Plain Layout
\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset

indice <- i
\end_layout

\begin_layout Plain Layout
\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset

max <- W[indice]
\end_layout

\begin_layout Plain Layout
\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset


\begin_inset space \space{}
\end_inset

return F[indice]
\end_layout

\end_inset


\end_layout

\begin_layout Section
Analisi di complessità
\end_layout

\begin_layout Standard
Ora analizziamo la complessità dell'algoritmo ponendoci nel caso peggiore.
 Supponiamo di costo costante le operazioni di lettura dal database e di
 gestione delle liste 
\emph on
\color green

\begin_inset Formula $O$
\end_inset

(1).
\end_layout

\begin_layout Standard
Poniamo 
\series bold
\emph on
p
\series default
\emph default
 il numero di prodotti,
\series bold
\emph on
 f 
\series default
\emph default
il numero di farmacie.
\end_layout

\begin_layout Standard
Avremo che:
\end_layout

\begin_layout Itemize
Complessità del 
\emph on
vincolo
\emph default
2: il ciclo for scorre tutti i prodotti presenti nel database, la complessità
 è 
\emph on
\color green

\begin_inset Formula $O$
\end_inset

(p)
\emph default
\color inherit
.
 
\end_layout

\begin_layout Itemize
Complessità del ciclo while: al massimo pari al numero di farmacie (ossia
 scorrendole tutte fino all'ultima), infatti se non esistesse abbastanza
 quantità disponibile nelle farmacie si uscirebbe subito grazie al vincolo
 2; la complessità è 
\emph on
\color green

\begin_inset Formula $O$
\end_inset

(f).
\end_layout

\begin_deeper
\begin_layout Itemize
All'interno del while la funzione 
\emph on
calcolaPesi() 
\emph default
ha due cicli for in cui quello esterno scorre tutte le farmacie presenti
 all'interno della lista F e il ciclo interno scorre tutti i prodotti ogni
 volta; la complessità nel caso peggiore è 
\emph on
\color green

\begin_inset Formula $O$
\end_inset

(f*p).
\end_layout

\begin_layout Itemize
All'interno del while la funzione 
\emph on
seleziona() 
\emph default
ha un solo ciclo for che scorre tutti gli identificativi delle farmacie
 appartenenti alla lista F; la complessità nel caso peggiore è 
\emph on
\color green

\begin_inset Formula $O$
\end_inset

(f).
\end_layout

\begin_layout Standard
La complessità totale del ciclo while è 
\emph on
\color green

\begin_inset Formula $O(f)*(O$
\end_inset

(f*p) + 
\begin_inset Formula $O$
\end_inset

(f)) = 
\begin_inset Formula $O$
\end_inset

(f
\begin_inset Formula $^{2}$
\end_inset

*p) + 
\begin_inset Formula $O$
\end_inset

(f
\begin_inset Formula $^{2}$
\end_inset

) = 
\begin_inset Formula $O$
\end_inset

(f
\begin_inset Formula $^{2}$
\end_inset

*p).
\end_layout

\end_deeper
\begin_layout Standard
La complessità totale dell'algoritmo nel caso peggiore è 
\emph on
\color green

\begin_inset Formula $O$
\end_inset

(p) + 
\begin_inset Formula $O$
\end_inset

(f
\begin_inset Formula $^{2}$
\end_inset

*p) = 
\begin_inset Formula $O$
\end_inset

(f
\begin_inset Formula $^{2}$
\end_inset

*p) .
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Section
Activity diagram
\end_layout

\begin_layout Standard
Nella figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "Flow chart (Transfer)"
plural "false"
caps "false"
noprefix "false"

\end_inset

 è rappresentato il flow chart dell'algoritmo di transfer.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename img/Flow chart (Transfer).png
	scale 60

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "Flow chart (Transfer)"

\end_inset


\end_layout

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Caption Standard

\begin_layout Plain Layout
Flow chart dell'algoritmo di transfer
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Testing dell'algoritmo
\end_layout

\begin_layout Standard
Ora procediamo con la fase di testing per assicurarci che l'algoritmo funzioni
 nella maniera corretta.
\end_layout

\begin_layout Standard
Premettiamo che è la funzione 
\emph on
transfer(request)
\emph default
 che si occupa di chiamare l'algoritmo e prima di chiamarlo svolge un controllo
 sulla variabile quantitàRichiesta inserita dall'utente.
 In particolare avremo due casistiche:
\end_layout

\begin_layout Itemize
se la quantità presente nelle farmacie è insufficiente: stamperà a video
 
\emph on
'There is not enough products in all pharmacies'
\emph default
 e non chiamerà l'algoritmo.
\end_layout

\begin_layout Itemize
se la quantità presente nelle farmacie è sufficiente: chiamerà l'algoritmo
 e successivamente stamperà a video 
\emph on
'Your transfers request has been sent!'
\emph default
.
\end_layout

\begin_layout Standard
La prima casistica è coperta esternamente dall'unica funzione che invoca
 l'algoritmo, quindi non ci occuperemo di inserire valori in input che non
 possano essere soddisfatti dalle farmacie.
\end_layout

\begin_layout Section
Struttura di un caso di test
\end_layout

\begin_layout Standard
Tutti i casi di test hanno la seguente struttura, in cui N indica l'indice
 del test:
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "language=Python,tabsize=7"
inline false
status open

\begin_layout Plain Layout

class TransferTestN(TestCase):     
\end_layout

\begin_layout Plain Layout

	def test_algorithm_TransferN(self):
\end_layout

\begin_layout Plain Layout

		<<inizializzazione>>
\end_layout

\begin_layout Plain Layout

		<<algoritmo>>
\end_layout

\begin_layout Plain Layout

		<<test>>
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Abbiamo che <<
\emph on
inizializzazione
\emph default
>> indica l'inizializzazione delle variabili di input dell'algoritmo, <<
\emph on
algoritmo
\emph default
>> indica la chiamata dell'algoritmo con i valori di input scelti precedentement
e e infine <<
\emph on
test
\emph default
>> si controlla che i risultati di output dell'algoritmo siano corretti.
\end_layout

\begin_layout Standard
Nel codice sorgente sono presenti 7 casi di test per coprire tutte le diverse
 casistiche.
 In questa sezione allegheremo uno dei più rilevanti dei 7 casi di test
 e evidenzieremo le caratteristiche del suo funzionamento commentando le
 linee salienti del codice.
 
\end_layout

\begin_layout Standard
In questo caso abbiamo cercato il trade-off che facesse cambiare la prima
 scelta su quale farmacia selezionare e coerentemente con il funzionamento
 dell'algoritmo abbiamo constatato che per valori di quantità di prodotti
 di farmacia1 minori o uguali a 669 si ha che la prima farmacia scelta è
 la farmacia2 e invece per valori di quantità di prodotti di farmacia1 maggiori
 o uguali a 670 si ha che la prima farmacia scelta è la farmacia1.
\end_layout

\begin_layout Standard
Infatti procedendo con i calcoli matematici si ha:
\end_layout

\begin_layout Standard
\begin_inset Formula $w1=\frac{N\text{°}Farmaci}{\sqrt{(x-x_{i})^{2}+(y-y_{i})^{2}}}=\frac{670}{\sqrt{(50-0)^{2}+(50-0)^{2}}}=9.47$
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula $w2=\frac{N\text{°}Farmaci}{\sqrt{(x-x_{i})^{2}+(y-y_{i})^{2}}}=\frac{201}{\sqrt{(50-65)^{2}+(50-65)^{2}}}=9.47$
\end_inset

 
\end_layout

\begin_layout Standard
Per questi valori si ha parità di pesi e quindi è indifferente compiere
 una scelta o l'altra.
 L'algoritmo per come implementato prenderà quella con indice minore e sceglierà
 la farmacia1.
 
\end_layout

\begin_layout Standard
Qui la parte di codice <<
\emph on
inizializzazione
\emph default
>> del caso 7:
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "language=Python,basicstyle={\small},tabsize=7"
inline false
status open

\begin_layout Plain Layout

xScelta=50
\end_layout

\begin_layout Plain Layout

yScelta=50
\end_layout

\begin_layout Plain Layout

quantitaScelta =1000
\end_layout

\begin_layout Plain Layout

categoriaScelta= Category.objects.create(name="antinfiammatori",
\end_layout

\begin_layout Plain Layout

				 description="Text")
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

user1 = User.objects.create(username='Testuser1')         
\end_layout

\begin_layout Plain Layout

user2 = User.objects.create(username='Testuser2')         
\end_layout

\begin_layout Plain Layout

user3 = User.objects.create(username='Testuser3')         
\end_layout

\begin_layout Plain Layout

user4 = User.objects.create(username='Testuser4')
\end_layout

\begin_layout Plain Layout

     
\end_layout

\begin_layout Plain Layout

farmacia1= Pharmacy.objects.create(owner=user1, name="farmacia1", 
\end_layout

\begin_layout Plain Layout

		   image="farmacia1.png", x=0, y=0,slot4hMinWeek=5,
\end_layout

\begin_layout Plain Layout

		   location="Bergamo",description="Text")         
\end_layout

\begin_layout Plain Layout

farmacia2= Pharmacy.objects.create(owner=user2, name="farmacia2", 
\end_layout

\begin_layout Plain Layout

		   image="farmacia2.png", x=65, y=65,slot4hMinWeek=5, 
\end_layout

\begin_layout Plain Layout

		   location="Bergamo",description="Text")         
\end_layout

\begin_layout Plain Layout

farmacia3= Pharmacy.objects.create(owner=user3, name="farmacia3", 
\end_layout

\begin_layout Plain Layout

		   image="farmacia3.png", x=22, y=22,slot4hMinWeek=5, 
\end_layout

\begin_layout Plain Layout

		   location="Bergamo",description="Text")         
\end_layout

\begin_layout Plain Layout

farmacia4= Pharmacy.objects.create(owner=user4, name="farmacia4",
\end_layout

\begin_layout Plain Layout

		   image="farmacia4.png", x=45, y=50,slot4hMinWeek=5, 
\end_layout

\begin_layout Plain Layout

		   location="Bergamo",description="Text")
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

farmacia1.save()         
\end_layout

\begin_layout Plain Layout

farmacia2.save()         
\end_layout

\begin_layout Plain Layout

farmacia3.save()         
\end_layout

\begin_layout Plain Layout

farmacia4.save()
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

prodotto1=Product.objects.create(name="prodotto1",
\end_layout

\begin_layout Plain Layout

		  category=categoriaScelta, pharmacy=farmacia1, 
\end_layout

\begin_layout Plain Layout

		  image="prodotto1.png", description="Text",
\end_layout

\begin_layout Plain Layout

		  brand="brand", quantity=670, price=10,shipping_fee=2)         
\end_layout

\begin_layout Plain Layout

prodotto2=Product.objects.create(name="prodotto2", 
\end_layout

\begin_layout Plain Layout

		  category=categoriaScelta, pharmacy=farmacia2,
\end_layout

\begin_layout Plain Layout

		  image="prodotto2.png", description="Text",
\end_layout

\begin_layout Plain Layout

		  brand="brand", quantity=201, price=10,shipping_fee=2)         
\end_layout

\begin_layout Plain Layout

prodotto3=Product.objects.create(name="prodotto3", 
\end_layout

\begin_layout Plain Layout

		  category=categoriaScelta, pharmacy=farmacia3, 
\end_layout

\begin_layout Plain Layout

		  image="prodotto3.png", description="Text", 
\end_layout

\begin_layout Plain Layout

		  brand="brand", quantity=290, price=10,shipping_fee=2)         
\end_layout

\begin_layout Plain Layout

prodotto4=Product.objects.create(name="prodotto4", 
\end_layout

\begin_layout Plain Layout

		  category=categoriaScelta, pharmacy=farmacia4, 
\end_layout

\begin_layout Plain Layout

		  image="prodotto4.png", description="Text", 
\end_layout

\begin_layout Plain Layout

		  brand="brand", quantity=10, price=10,shipping_fee=2)
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

prodotto1.save()         
\end_layout

\begin_layout Plain Layout

prodotto2.save()         
\end_layout

\begin_layout Plain Layout

prodotto3.save()         
\end_layout

\begin_layout Plain Layout

prodotto4.save()
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Nella parte iniziale abbiamo inserito le richieste: si indica la posizione
 iniziale [
\emph on
xScelta
\emph default
, 
\emph on
yScelta
\emph default
] , la quantità di farmaco voluta [
\emph on
quantitàScelta
\emph default
] e [
\emph on
categoriaScelta
\emph default
] che è la categoria del farmaco richiesto.
\end_layout

\begin_layout Standard
In seguito abbiamo creato tutti gli input dell'algoritmo: abbiamo istanziato
 4 farmacie e le abbiamo inserite nel database; nell'istanziare le farmacie
 è richiesto un owner che abbiamo referenziato con 4 user differenti; poi
 abbiamo istanziato i 4 prodotti, ognuno corrispondente alla rispettiva
 farmacia e li abbiamo inseriti nel database.
\end_layout

\begin_layout Standard
Qui la parte di codice <<
\emph on
algoritmo
\emph default
>> del caso 7:
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "language=Python,tabsize=7"
inline false
status open

\begin_layout Plain Layout

doppia=algorithm_transfer(categoriaScelta, quantitaScelta, xScelta, yScelta)
 
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Viene invocato l'algoritmo e viene salvato il risultato nel vettore di due
 elementi chiamato 
\emph on
doppia
\emph default
: è formato da 
\emph on
doppia[0]
\emph default
 che contiene l'ID delle farmacie usate e 
\emph on
doppia[1]
\emph default
 che contiene la quantità presa dalla farmacia usata.
 
\end_layout

\begin_layout Standard
Qui la parte di codice <<
\emph on
test
\emph default
>> del caso 7:
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

self.assertEqual(doppia[0], [farmacia1.id, farmacia3.id,farmacia2.id])     
    
\end_layout

\begin_layout Plain Layout

self.assertEqual(doppia[1], [670, 290, 40])
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Questi comandi servono per effettuare il test vero e proprio sui risultati
 ottenuti dall'algoritmo.
 Il comando 
\emph on
self.assertEqual(argomento1, argomento2) 
\emph default
riceve due argomenti e controlla che siano uguali i valori.
 Inserendo al posto di argomento2 il valore che ci si aspetta, si verifica
 se l'algoritmo funziona correttamente o meno.
\end_layout

\end_body
\end_document
