name: Django Testing CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    
    runs-on: ubuntu-latest
    
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.8]

    env:
      working-directory: ./pharmacies
          
    steps:
    - uses: actions/checkout@v2
      
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache dependencies
      uses: actions/cache@v1.1.2
      with:
        # A directory to store and save the cache
        path: ~/.cache/pip # This path is specific to Ubuntu
        # An explicit key for restoring and saving the cache
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        # An ordered list of keys to use for restoring the cache if no cache hit occurred for key
        restore-keys: ${{ runner.os }}-pip-
          
    - name: Install dependencies
      working-directory: ${{env.working-directory}}
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Run migrations
      working-directory: ${{env.working-directory}}
      run: |
        python manage.py makemigrations
        python manage.py migrate
        
    - name: Run test and generate coverage report
      working-directory: ${{env.working-directory}}
      run: |
        coverage run manage.py test -v 2 --exclude-tag=selenium
        coverage xml
         
    - name: Codecov
      uses: codecov/codecov-action@v1.0.6
      with:
        # User defined upload name. Visible in Codecov UI
        name: coveragepytest # optional
        # Repository upload token - get it from codecov.io. Required only for private repositories
        token: ${{ secrets.CODECOV_TOKEN }}
        # Path to coverage file to upload
        file: ${{env.working-directory}}/coverage.xml
        # Flag upload to group coverage metrics (e.g. unittests | integration | ui,chrome)
        flags: unittests # optional
        # Specify whether or not CI build should fail if Codecov runs into an error during upload
        fail_ci_if_error: true # optional
